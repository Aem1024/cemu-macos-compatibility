.compatWrapper {
    margin-bottom: 2em;
}

.compatIndicatorGrid {
    font-size: .5em;
    padding-right: 4px;
    vertical-align: middle;
}

.compatIndicator {
    font-size: .5em;
    padding-inline: 0 1.2em;
    padding-block: 7px;
}

@media (min-width: 701px) {
    .compatWrapper > .compatItem ~ .compatItem {
        margin-left: .7em;
        margin-right: 0;
    }
}

@media (max-width: 700px) {
    .compatItem {
        margin-bottom: .7em;
    }
    .compatWrapper .compatItem:last-of-type {
        margin-bottom: 0;
    }
}

.compatItem {
    border-radius: 8px;
    padding: 1em 1.2em;
    box-shadow: var(--compat-shadow);
    cursor: pointer;
    user-select: none;
    transition: transform ease-in-out 150ms, background 100ms, color 100ms, border 100ms;
}

.compatItem:hover {
    transform: scale(1.035);
}

.perfect {
    color: var(--c-perfect);
}
.playable {
    color: var(--c-playable);
}
.runs {
    color: var(--c-runs);
}
.loads {
    color: var(--c-loads);
}
.unplayable {
    color: var(--c-unplayable);
}

.perfectBg {
    background: mix($perfect, $background);
}
.playableBg {
    background: mix($playable, $background);
}
.runsBg {
    background: mix($runs, $background);
}
.loadsBg {
    background: mix($loads, $background);
}
.unplayableBg {
    background: mix($unplayable, $background);
}

@media (prefers-color-scheme: light) {
    .compatItem {
        border: 2px solid rgba(0,0,0,0);
    }

    .container-perfect {
        background: var(--c-container-bg-perfect) !important;
    }
    .container-playable {
        background: var(--c-container-bg-playable) !important;
    }
    .container-runs {
        background: var(--c-container-bg-runs) !important;
    }
    .container-loads {
        background: var(--c-container-bg-loads) !important;
    }
    .container-unplayable {
        background: var(--c-container-bg-unplayable) !important;
    }

    .container-perfect a {
        color: var(--c-perfect) !important;
    }
    .container-playable a {
        color: var(--c-playable) !important;
    }
    .container-runs a {
        color: var(--c-runs) !important;
    }
    .container-loads a {
        color: var(--c-loads) !important;
    }
    .container-unplayable a {
        color: var(--c-unplayable) !important;
    }

    .compatItemHidden {
        background-color: var(--c-border);
        color: var(--c-text-grey);
    }
}
  
@media (prefers-color-scheme: dark) {
    .compatItem {
        background-color: var(--c-container-bg);
        border: 2px solid rgba(0,0,0,0);
    }
    .compatItem:hover {
        background-color: var(--c-bg-lighter);
    }

    .container-perfect {
        border: 2px solid var(--c-container-bg-perfect);
    }
    .container-playable {
        border: 2px solid var(--c-container-bg-playable);
    }
    .container-runs {
        border: 2px solid var(--c-container-bg-runs);
    }
    .container-loads {
        border: 2px solid var(--c-container-bg-loads);
    }
    .container-unplayable {
        border: 2px solid var(--c-container-bg-unplayable);
    }

    .perfectBg {
        background: mix($perfect, $dm-background, 70%);
    }
    .playableBg {
        background: mix($playable, $dm-background, 70%);
    }
    .runsBg {
        background: mix($runs, $dm-background, 70%);
    }
    .loadsBg {
        background: mix($loads, $dm-background, 70%);
    }
    .unplayableBg {
        background: mix($unplayable, $dm-background, 70%);
    }

    .compatItemHidden {
        color: var(--c-text-grey);
    }
}